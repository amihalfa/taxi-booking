<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <!-- Application authentication manager -->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider >
            <sec:user-service>
                <sec:user name="amirouche" authorities="ROLE_USER" password="pwd" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <!-- oauth2 basic authentication -->
    <sec:http pattern="/oauth/token" create-session="stateless"
              authentication-manager-ref="clientAuthenticationManager">
        <sec:intercept-url pattern="/**" method="GET" access="ROLE_DENY" />
        <sec:intercept-url pattern="/**" method="PUT" access="ROLE_DENY" />
        <sec:intercept-url pattern="/**" method="DELETE" access="ROLE_DENY" />
        <sec:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
        <sec:anonymous enabled="false" />
        <sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
    </sec:http>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="taxi-booking/client" />
        <property name="typeName" value="Basic" />
    </bean>

    <sec:authentication-manager id="clientAuthenticationManager">
        <sec:authentication-provider user-service-ref="clientDetailsUserService"/>
    </sec:authentication-manager>

    <bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails" />
    </bean>

    <bean id="tokenStore"
          class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore" />
        <property name="supportRefreshToken" value="true" />
        <property name="clientDetailsService" ref="clientDetails" />
    </bean>


    <oauth:authorization-server
            client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code />
        <oauth:implicit />
        <oauth:refresh-token />
        <oauth:client-credentials />
        <oauth:password />
    </oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices" />

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="passwordclient"
                      secret="azerty"
                       authorized-grant-types="password,authorization_code,refresh_token,implicit"
                       scope="read,write,trust" resource-ids="oauth2-resource"
                       access-token-validity="6000" authorities="ROLE_TRUSTED_CLIENT" />
        <oauth:client client-id="trustedclient" authorized-grant-types="client_credentials,refresh-token,implicit"
                      secret="clientsecret" access-token-validity="6000"
                      resource-ids="oauth2-resource"
                      scope="read,write,trust" authorities="ROLE_TRUSTED_CLIENT" />
    </oauth:client-details-service>



    <sec:http pattern="/**" create-session="never"
          entry-point-ref="clientAuthenticationEntryPoint">
        <sec:anonymous enabled="false" />
        <sec:intercept-url pattern="/**" access="ROLE_TRUSTED_CLIENT"  />
        <sec:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
    </sec:http>

    <sec:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
        <sec:expression-handler ref="oauthExpressionHandler" />
    </sec:global-method-security>

    <oauth:expression-handler id="oauthExpressionHandler" />

    <oauth:web-expression-handler id="oauthWebExpressionHandler" />

</beans>